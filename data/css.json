{
  "button": {
    "title": "Styling and State Feedback",
    "description": "Styling buttons involves providing clear visual feedback for different user interactions. It's crucial to define styles for the default, hover, focus, and active states. Using CSS Custom Properties (variables) makes it easy to manage a consistent theme and allow for dynamic changes (as seen in the 'Props' panel).\n    - :hover: Indicates the user's mouse is over the button, signaling interactivity.\n    - :focus-visible: A critical accessibility feature that provides a visible outline when a user navigates to the button with a keyboard.\n    - :active: Gives feedback at the exact moment the button is clicked.",
    "code": ":root {\n  --btn-bg-color: #4f46e5;\n  --btn-text-color: #ffffff;\n  --btn-border-radius: 0.375rem;\n}\n\n.btn {\n  background-color: var(--btn-bg-color);\n  color: var(--btn-text-color);\n  border-radius: var(--btn-border-radius);\n  padding: 0.75rem 1.5rem;\n  border: none;\n  cursor: pointer;\n  transition: background-color 200ms ease-in-out;\n}\n\n.btn:hover {\n  background-color: #4338ca; /* A slightly darker shade */\n}\n\n.btn:focus-visible {\n  outline: 4px solid #a5b4fc;\n  outline-offset: 2px;\n}\n\n.btn:active {\n  transform: scale(0.98);\n}"
  },
  "modal": {
    "title": "Styling the Dialog and Backdrop",
    "description": "Styling a `<dialog>` involves two key parts: the dialog panel itself and the overlay behind it.\n    -   `dialog`: You can style the dialog box like any other element, applying `border-radius`, `box-shadow`, `padding`, etc.\n    -   `::backdrop`: This special pseudo-element allows you to style the overlay that appears behind the modal when it's opened with `.showModal()`. It's perfect for dimming the background content to increase focus on the dialog.",
    "code": "dialog.modal-container {\n  border: none;\n  border-radius: 0.5rem;\n  box-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);\n  padding: 0; /* Padding is applied to an inner panel */\n}\n\ndialog::backdrop {\n  background: rgba(0, 0, 0, 0.5);\n  backdrop-filter: blur(4px); /* Optional: blurs the background content */\n}\n\n.modal-panel {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 0.5rem;\n  min-width: 400px;\n  max-width: 90vw;\n}\n\n.modal-title {\n  margin: 0 0 1rem 0;\n  font-size: 1.25rem;\n  font-weight: 600;\n}\n\n.modal-footer {\n  margin-top: 1.5rem;\n  display: flex;\n  justify-content: flex-end;\n  gap: 0.5rem;\n}"
  },
  "accordion": {
    "title": "Styling and Animating States",
    "description": "CSS is responsible for the visual feedback and smooth animations.\n    -   **State Styling**: We use an attribute selector, `[aria-expanded=\"true\"]`, to apply styles when the accordion is open. This is a robust method because it links the style directly to the accessible state.\n    -   **Icon Animation**: The chevron icon is rotated using a CSS `transform` to provide a clear visual cue for opening and closing.\n    -   **Panel Animation**: A smooth height animation is difficult with dynamic content. A modern solution is to use CSS Grid. We transition the `grid-template-rows` property from `0fr` (collapsed) to `1fr` (expanded). This animates the height without needing a fixed value.",
    "code": ".accordion-panel {\n  display: grid;\n  /* Collapsed state: rows have no height */\n  grid-template-rows: 0fr;\n  transition: grid-template-rows 0.3s ease-in-out;\n}\n\n/* The [hidden] attribute is toggled by JS. This selector is for when it's NOT hidden. */\n.accordion-panel:not([hidden]) {\n  /* Expanded state: row takes up 1 fraction of the available space */\n  grid-template-rows: 1fr;\n}\n\n.accordion-button[aria-expanded=\"true\"] .accordion-icon {\n  transform: rotate(180deg);\n}\n\n.accordion-button {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 1rem;\n  background: white;\n  border: 1px solid #e5e5e5;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.accordion-button:hover {\n  background-color: #f9f9f9;\n}\n\n.accordion-content {\n  overflow: hidden;\n  padding: 1rem;\n  background: #fafafa;\n}"
  },
  "headings": {
    "title": "Heading Typography and Hierarchy",
    "description": "CSS for headings should establish a clear visual hierarchy that matches the semantic hierarchy. Font sizes, weights, and spacing should decrease progressively from h1 to h6. Consistent margins and line heights improve readability and create visual rhythm.",
    "code": "/* Base heading styles */\nh1, h2, h3, h4, h5, h6 {\n  font-family: 'Arial', sans-serif;\n  font-weight: 700;\n  line-height: 1.2;\n  margin-top: 0;\n  margin-bottom: 0.5rem;\n  color: #333;\n}\n\n/* Specific heading sizes */\nh1 {\n  font-size: 2.5rem;\n  margin-bottom: 1rem;\n  border-bottom: 3px solid #007acc;\n  padding-bottom: 0.5rem;\n}\n\nh2 {\n  font-size: 2rem;\n  margin-bottom: 0.75rem;\n  color: #444;\n}\n\nh3 {\n  font-size: 1.5rem;\n  margin-bottom: 0.5rem;\n}\n\nh4 {\n  font-size: 1.25rem;\n  font-weight: 600;\n}\n\nh5 {\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: #666;\n}\n\nh6 {\n  font-size: 1rem;\n  font-weight: 600;\n  color: #777;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n/* Responsive heading adjustments */\n@media (max-width: 768px) {\n  h1 { font-size: 2rem; }\n  h2 { font-size: 1.5rem; }\n  h3 { font-size: 1.25rem; }\n}"
  },
  "paragraphs": {
    "title": "Typography and Readability",
    "description": "Paragraph styling focuses on readability and visual comfort. Key considerations include line height, font size, margins, and text color. Proper spacing between paragraphs creates visual breaks that make content easier to scan and read.",
    "code": "p {\n  font-family: 'Georgia', serif;\n  font-size: 1rem;\n  line-height: 1.6;\n  margin-bottom: 1rem;\n  color: #333;\n}\n\n/* Lead paragraph for introductions */\n.lead {\n  font-size: 1.125rem;\n  font-weight: 300;\n  line-height: 1.5;\n  color: #555;\n  margin-bottom: 1.5rem;\n}\n\n/* Small print */\n.small {\n  font-size: 0.875rem;\n  color: #666;\n  line-height: 1.4;\n}\n\n/* Paragraph with emphasis */\np strong {\n  font-weight: 700;\n  color: #000;\n}\n\np em {\n  font-style: italic;\n  color: #444;\n}\n\n/* Paragraph spacing adjustments */\np + p {\n  margin-top: 1rem;\n}\n\n/* Responsive paragraph adjustments */\n@media (max-width: 768px) {\n  p {\n    font-size: 0.9rem;\n    line-height: 1.5;\n  }\n  \n  .lead {\n    font-size: 1rem;\n  }\n}"
  },
  "links": {
    "title": "Link States and Visual Feedback",
    "description": "Link styling should provide clear visual indication of interactivity and different states. The traditional link states (link, visited, hover, active) should be styled consistently. Modern link design often uses subtle animations and maintains good contrast for accessibility.",
    "code": "/* Base link styles */\na {\n  color: #007acc;\n  text-decoration: underline;\n  transition: color 0.2s ease, text-decoration-color 0.2s ease;\n}\n\n/* Hover state */\na:hover {\n  color: #005999;\n  text-decoration-color: #005999;\n}\n\n/* Focus state for accessibility */\na:focus {\n  outline: 2px solid #007acc;\n  outline-offset: 2px;\n  border-radius: 2px;\n}\n\n/* Visited links */\na:visited {\n  color: #6b46c1;\n}\n\n/* Active state */\na:active {\n  color: #003d66;\n}\n\n/* Button-style links */\n.btn-link {\n  display: inline-block;\n  padding: 0.5rem 1rem;\n  background-color: #007acc;\n  color: white;\n  text-decoration: none;\n  border-radius: 4px;\n  transition: background-color 0.2s ease;\n}\n\n.btn-link:hover {\n  background-color: #005999;\n  color: white;\n}\n\n/* External link indicator */\na[href^=\"http\"]:after {\n  content: \" ↗\";\n  font-size: 0.8em;\n  opacity: 0.7;\n}\n\n/* Link within navigation */\nnav a {\n  text-decoration: none;\n  padding: 0.5rem;\n  border-radius: 4px;\n}\n\nnav a:hover {\n  background-color: #f0f0f0;\n}"
  },
  "lists": {
    "title": "List Styling and Layout",
    "description": "List styling involves formatting the list markers, spacing, and overall layout. Different list types can be styled with custom markers, colors, and layouts. Modern list design often removes default styling and applies custom formatting for better visual integration.",
    "code": "/* Reset default list styling */\nul, ol, dl {\n  margin: 0;\n  padding: 0;\n}\n\n/* Basic unordered list */\nul {\n  list-style-type: disc;\n  margin-left: 1.5rem;\n  margin-bottom: 1rem;\n}\n\nul li {\n  margin-bottom: 0.25rem;\n  line-height: 1.5;\n}\n\n/* Custom bullet points */\n.custom-list {\n  list-style: none;\n  margin-left: 0;\n}\n\n.custom-list li {\n  position: relative;\n  padding-left: 1.5rem;\n  margin-bottom: 0.5rem;\n}\n\n.custom-list li::before {\n  content: \"▸\";\n  position: absolute;\n  left: 0;\n  color: #007acc;\n  font-weight: bold;\n}\n\n/* Ordered list */\nol {\n  list-style-type: decimal;\n  margin-left: 1.5rem;\n  margin-bottom: 1rem;\n}\n\nol li {\n  margin-bottom: 0.25rem;\n  line-height: 1.5;\n}\n\n/* Custom numbered list */\n.custom-numbered {\n  list-style: none;\n  counter-reset: item;\n  margin-left: 0;\n}\n\n.custom-numbered li {\n  counter-increment: item;\n  padding-left: 2rem;\n  position: relative;\n  margin-bottom: 0.5rem;\n}\n\n.custom-numbered li::before {\n  content: counter(item);\n  position: absolute;\n  left: 0;\n  top: 0;\n  background: #007acc;\n  color: white;\n  width: 1.5rem;\n  height: 1.5rem;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.8rem;\n  font-weight: bold;\n}\n\n/* Description list */\ndl {\n  margin-bottom: 1rem;\n}\n\ndt {\n  font-weight: bold;\n  margin-bottom: 0.25rem;\n  color: #333;\n}\n\ndd {\n  margin-left: 1rem;\n  margin-bottom: 0.5rem;\n  color: #666;\n}\n\n/* Horizontal list */\n.horizontal-list {\n  display: flex;\n  list-style: none;\n  gap: 1rem;\n  margin: 0;\n}\n\n.horizontal-list li {\n  margin: 0;\n}"
  },
  "table": {
    "title": "Table Layout and Styling",
    "description": "Table styling should enhance readability and data comprehension. This includes consistent spacing, clear borders, alternating row colors, and proper alignment. Responsive considerations are important for mobile viewing of tabular data.",
    "code": "/* Base table styles */\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 1rem;\n  background-color: white;\n}\n\n/* Table caption */\ncaption {\n  caption-side: top;\n  padding: 0.5rem;\n  font-weight: bold;\n  text-align: left;\n  background-color: #f8f9fa;\n  border: 1px solid #dee2e6;\n  border-bottom: none;\n}\n\n/* Header styling */\nth {\n  background-color: #f8f9fa;\n  border: 1px solid #dee2e6;\n  padding: 0.75rem;\n  text-align: left;\n  font-weight: 600;\n  color: #495057;\n}\n\n/* Cell styling */\ntd {\n  border: 1px solid #dee2e6;\n  padding: 0.75rem;\n  vertical-align: top;\n}\n\n/* Striped rows */\ntbody tr:nth-child(even) {\n  background-color: #f8f9fa;\n}\n\n/* Hover effect */\ntbody tr:hover {\n  background-color: #e9ecef;\n}\n\n/* Numeric data alignment */\nth.numeric,\ntd.numeric {\n  text-align: right;\n}\n\n/* Compact table variant */\n.table-sm th,\n.table-sm td {\n  padding: 0.3rem;\n}\n\n/* Responsive table */\n.table-responsive {\n  overflow-x: auto;\n  -webkit-overflow-scrolling: touch;\n}\n\n@media (max-width: 768px) {\n  .table-responsive table {\n    min-width: 600px;\n  }\n}\n\n/* Bordered table */\n.table-bordered {\n  border: 2px solid #dee2e6;\n}\n\n.table-bordered th,\n.table-bordered td {\n  border: 1px solid #dee2e6;\n}\n\n/* Borderless table */\n.table-borderless th,\n.table-borderless td {\n  border: none;\n}"
  },
  "form": {
    "title": "Form Layout and Styling",
    "description": "Form styling focuses on usability, accessibility, and visual consistency. This includes proper spacing, clear visual hierarchy, consistent input styling, and appropriate feedback states. Form layout should guide users through the completion process logically.",
    "code": "/* Form container */\nform {\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 1.5rem;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n/* Fieldset styling */\nfieldset {\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 1rem;\n  margin-bottom: 1.5rem;\n}\n\nlegend {\n  font-weight: bold;\n  padding: 0 0.5rem;\n  color: #333;\n}\n\n/* Label styling */\nlabel {\n  display: block;\n  margin-bottom: 0.25rem;\n  font-weight: 500;\n  color: #333;\n}\n\n/* Required field indicator */\nlabel.required::after {\n  content: \" *\";\n  color: #dc3545;\n}\n\n/* Input styling */\ninput[type=\"text\"],\ninput[type=\"email\"],\ninput[type=\"password\"],\ninput[type=\"tel\"],\ninput[type=\"url\"],\ninput[type=\"number\"],\ninput[type=\"date\"],\nselect,\ntextarea {\n  width: 100%;\n  padding: 0.5rem;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  font-size: 1rem;\n  transition: border-color 0.2s, box-shadow 0.2s;\n}\n\n/* Focus state */\ninput:focus,\nselect:focus,\ntextarea:focus {\n  outline: none;\n  border-color: #007acc;\n  box-shadow: 0 0 0 2px rgba(0, 122, 204, 0.2);\n}\n\n/* Error state */\ninput.error {\n  border-color: #dc3545;\n}\n\n/* Success state */\ninput.success {\n  border-color: #28a745;\n}\n\n/* Form group spacing */\n.form-group {\n  margin-bottom: 1rem;\n}\n\n/* Checkbox and radio styling */\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  margin-right: 0.5rem;\n  transform: scale(1.1);\n}\n\n/* Button styling */\nbutton[type=\"submit\"],\ninput[type=\"submit\"] {\n  background-color: #007acc;\n  color: white;\n  padding: 0.75rem 1.5rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: background-color 0.2s;\n}\n\nbutton[type=\"submit\"]:hover {\n  background-color: #005999;\n}\n\n/* Help text */\n.help-text {\n  font-size: 0.875rem;\n  color: #666;\n  margin-top: 0.25rem;\n}\n\n/* Error message */\n.error-message {\n  color: #dc3545;\n  font-size: 0.875rem;\n  margin-top: 0.25rem;\n}"
  },
  "label": {
    "title": "Label Styling and Visual Association",
    "description": "Label styling should create clear visual connections between labels and their associated form controls. This includes proper spacing, typography, and visual indicators for required fields or additional information.",
    "code": "/* Base label styling */\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: #333;\n  font-size: 0.875rem;\n  line-height: 1.4;\n}\n\n/* Required field indicator */\nlabel.required::after,\nlabel[required]::after {\n  content: \" *\";\n  color: #dc3545;\n  font-weight: bold;\n}\n\n/* Inline labels (for checkboxes/radio) */\nlabel.inline {\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.5rem;\n  font-weight: normal;\n  cursor: pointer;\n}\n\nlabel.inline input {\n  margin-right: 0.5rem;\n  margin-bottom: 0;\n}\n\n/* Label with help text */\n.label-with-help {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.help-icon {\n  width: 16px;\n  height: 16px;\n  background: #666;\n  color: white;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.75rem;\n  cursor: help;\n}\n\n/* Label states */\nlabel.disabled {\n  color: #999;\n  cursor: not-allowed;\n}\n\nlabel.error {\n  color: #dc3545;\n}\n\n/* Floating labels */\n.floating-label {\n  position: relative;\n  margin-bottom: 1rem;\n}\n\n.floating-label input {\n  padding: 1rem 0.75rem 0.5rem;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  font-size: 1rem;\n  width: 100%;\n}\n\n.floating-label label {\n  position: absolute;\n  top: 0.75rem;\n  left: 0.75rem;\n  transition: all 0.2s;\n  pointer-events: none;\n  color: #666;\n  margin: 0;\n}\n\n.floating-label input:focus + label,\n.floating-label input:not(:placeholder-shown) + label {\n  transform: translateY(-0.5rem) scale(0.8);\n  color: #007acc;\n}\n\n/* Group labels (for fieldsets) */\nfieldset label {\n  font-weight: normal;\n  margin-bottom: 0.25rem;\n}\n\nlegend {\n  font-weight: 600;\n  font-size: 1rem;\n  color: #333;\n  padding: 0 0.5rem;\n  margin-bottom: 0.5rem;\n}"
  },
  "input": {
    "title": "Input Styling and States",
    "description": "Input styling involves creating consistent, accessible form controls with clear visual feedback for different states. This includes focus, error, success, and disabled states, as well as appropriate styling for different input types.",
    "code": "/* Base input styling */\ninput {\n  font-family: inherit;\n  font-size: 1rem;\n  line-height: 1.4;\n  color: #333;\n  background-color: white;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  padding: 0.5rem 0.75rem;\n  transition: border-color 0.2s, box-shadow 0.2s, background-color 0.2s;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n/* Focus state */\ninput:focus {\n  outline: none;\n  border-color: #007acc;\n  box-shadow: 0 0 0 3px rgba(0, 122, 204, 0.1);\n}\n\n/* Hover state */\ninput:hover:not(:disabled) {\n  border-color: #999;\n}\n\n/* Error state */\ninput.error,\ninput:invalid {\n  border-color: #dc3545;\n  background-color: #fdf2f2;\n}\n\ninput.error:focus {\n  box-shadow: 0 0 0 3px rgba(220, 53, 69, 0.1);\n}\n\n/* Success state */\ninput.success,\ninput:valid {\n  border-color: #28a745;\n  background-color: #f2fdf3;\n}\n\n/* Disabled state */\ninput:disabled {\n  background-color: #f5f5f5;\n  color: #999;\n  cursor: not-allowed;\n  border-color: #ddd;\n}\n\n/* Placeholder styling */\ninput::placeholder {\n  color: #999;\n  opacity: 1;\n}\n\n/* Specific input types */\ninput[type=\"email\"],\ninput[type=\"url\"] {\n  font-family: monospace;\n}\n\ninput[type=\"number\"] {\n  text-align: right;\n}\n\ninput[type=\"search\"] {\n  -webkit-appearance: none;\n  appearance: none;\n}\n\n/* Color input */\ninput[type=\"color\"] {\n  padding: 0.25rem;\n  height: 2.5rem;\n  cursor: pointer;\n}\n\n/* Range input */\ninput[type=\"range\"] {\n  padding: 0;\n  background: transparent;\n  cursor: pointer;\n}\n\n/* File input */\ninput[type=\"file\"] {\n  padding: 0.25rem;\n  cursor: pointer;\n}\n\n/* Checkbox and radio */\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  width: auto;\n  margin-right: 0.5rem;\n  cursor: pointer;\n  transform: scale(1.1);\n}\n\n/* Date inputs */\ninput[type=\"date\"],\ninput[type=\"time\"],\ninput[type=\"datetime-local\"] {\n  cursor: pointer;\n}\n\n/* Input groups */\n.input-group {\n  display: flex;\n  align-items: stretch;\n}\n\n.input-group input {\n  border-radius: 0;\n  border-right: none;\n}\n\n.input-group input:first-child {\n  border-top-left-radius: 4px;\n  border-bottom-left-radius: 4px;\n}\n\n.input-group input:last-child {\n  border-right: 1px solid #ccc;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n}\n\n.input-group-addon {\n  background: #f8f9fa;\n  border: 1px solid #ccc;\n  padding: 0.5rem 0.75rem;\n  white-space: nowrap;\n  display: flex;\n  align-items: center;\n}\n\n/* Large and small variants */\n.input-lg {\n  padding: 0.75rem 1rem;\n  font-size: 1.125rem;\n}\n\n.input-sm {\n  padding: 0.25rem 0.5rem;\n  font-size: 0.875rem;\n}"
  },
  "textarea": {
    "title": "Textarea Styling and Behavior",
    "description": "Textarea styling focuses on readability and user experience for multi-line text input. This includes appropriate sizing, resize behavior, and consistent styling with other form elements while accommodating longer content.",
    "code": "/* Base textarea styling */\ntextarea {\n  font-family: inherit;\n  font-size: 1rem;\n  line-height: 1.4;\n  color: #333;\n  background-color: white;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  padding: 0.75rem;\n  width: 100%;\n  box-sizing: border-box;\n  transition: border-color 0.2s, box-shadow 0.2s;\n  resize: vertical; /* Allow vertical resizing only */\n  min-height: 100px;\n}\n\n/* Focus state */\ntextarea:focus {\n  outline: none;\n  border-color: #007acc;\n  box-shadow: 0 0 0 3px rgba(0, 122, 204, 0.1);\n}\n\n/* Hover state */\ntextarea:hover:not(:disabled) {\n  border-color: #999;\n}\n\n/* Error state */\ntextarea.error {\n  border-color: #dc3545;\n  background-color: #fdf2f2;\n}\n\n/* Success state */\ntextarea.success {\n  border-color: #28a745;\n  background-color: #f2fdf3;\n}\n\n/* Disabled state */\ntextarea:disabled {\n  background-color: #f5f5f5;\n  color: #999;\n  cursor: not-allowed;\n  border-color: #ddd;\n  resize: none;\n}\n\n/* Placeholder styling */\ntextarea::placeholder {\n  color: #999;\n  opacity: 1;\n}\n\n/* Character counter styling */\n.textarea-wrapper {\n  position: relative;\n}\n\n.char-counter {\n  position: absolute;\n  bottom: 0.5rem;\n  right: 0.75rem;\n  font-size: 0.75rem;\n  color: #666;\n  background: rgba(255, 255, 255, 0.9);\n  padding: 0.25rem;\n  border-radius: 2px;\n}\n\n.char-counter.warning {\n  color: #f39c12;\n}\n\n.char-counter.error {\n  color: #dc3545;\n}\n\n/* Auto-resize textarea */\n.textarea-auto {\n  resize: none;\n  overflow: hidden;\n}\n\n/* Size variants */\n.textarea-sm {\n  padding: 0.5rem;\n  font-size: 0.875rem;\n  min-height: 80px;\n}\n\n.textarea-lg {\n  padding: 1rem;\n  font-size: 1.125rem;\n  min-height: 120px;\n}\n\n/* Code textarea */\n.textarea-code {\n  font-family: 'Courier New', monospace;\n  background-color: #f8f9fa;\n  border-color: #e9ecef;\n  white-space: pre;\n  overflow-wrap: normal;\n  overflow-x: auto;\n}\n\n/* Fixed size textarea */\n.textarea-fixed {\n  resize: none;\n  height: 150px;\n}\n\n/* Full height textarea */\n.textarea-full {\n  height: 300px;\n  resize: vertical;\n}\n\n/* Textarea with border styling */\n.textarea-bordered {\n  border: 2px solid #ddd;\n  border-radius: 8px;\n}\n\n.textarea-bordered:focus {\n  border-color: #007acc;\n  box-shadow: none;\n}"
  },
  "select": {
    "title": "Select Dropdown Styling",
    "description": "Select element styling involves creating consistent dropdown menus that match the overall form design. This includes custom arrows, proper spacing, and handling of different states while maintaining accessibility.",
    "code": "/* Base select styling */\nselect {\n  font-family: inherit;\n  font-size: 1rem;\n  color: #333;\n  background-color: white;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  padding: 0.5rem 2rem 0.5rem 0.75rem;\n  width: 100%;\n  cursor: pointer;\n  transition: border-color 0.2s, box-shadow 0.2s;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"%23666\" stroke-width=\"2\"><path d=\"M6 9l6 6 6-6\"/></svg>');\n  background-repeat: no-repeat;\n  background-position: right 0.75rem center;\n  background-size: 1rem;\n}\n\n/* Focus state */\nselect:focus {\n  outline: none;\n  border-color: #007acc;\n  box-shadow: 0 0 0 3px rgba(0, 122, 204, 0.1);\n}\n\n/* Hover state */\nselect:hover:not(:disabled) {\n  border-color: #999;\n}\n\n/* Disabled state */\nselect:disabled {\n  background-color: #f5f5f5;\n  color: #999;\n  cursor: not-allowed;\n  border-color: #ddd;\n}\n\n/* Multiple select */\nselect[multiple] {\n  background-image: none;\n  padding: 0.5rem 0.75rem;\n  height: auto;\n  min-height: 120px;\n}\n\nselect[multiple] option {\n  padding: 0.25rem 0.5rem;\n}\n\n/* Option group styling */\noptgroup {\n  font-weight: bold;\n  color: #666;\n  font-style: normal;\n}\n\noptgroup option {\n  font-weight: normal;\n  color: #333;\n  padding-left: 1rem;\n}\n\n/* Size variants */\n.select-sm {\n  padding: 0.25rem 1.5rem 0.25rem 0.5rem;\n  font-size: 0.875rem;\n  background-position: right 0.5rem center;\n  background-size: 0.875rem;\n}\n\n.select-lg {\n  padding: 0.75rem 2.5rem 0.75rem 1rem;\n  font-size: 1.125rem;\n  background-position: right 1rem center;\n  background-size: 1.125rem;\n}\n\n/* Error state */\nselect.error {\n  border-color: #dc3545;\n  background-color: #fdf2f2;\n}\n\n/* Success state */\nselect.success {\n  border-color: #28a745;\n  background-color: #f2fdf3;\n}\n\n/* Custom select container */\n.select-wrapper {\n  position: relative;\n  display: inline-block;\n  width: 100%;\n}\n\n/* Custom select with label */\n.select-with-label {\n  margin-bottom: 1rem;\n}\n\n.select-with-label label {\n  display: block;\n  margin-bottom: 0.25rem;\n  font-weight: 500;\n  color: #333;\n}\n\n/* Select with validation message */\n.select-feedback {\n  font-size: 0.875rem;\n  margin-top: 0.25rem;\n}\n\n.select-feedback.error {\n  color: #dc3545;\n}\n\n.select-feedback.success {\n  color: #28a745;\n}\n\n/* Native select on mobile */\n@media (max-width: 768px) {\n  select {\n    -webkit-appearance: menulist;\n    -moz-appearance: menulist;\n    appearance: menulist;\n    background-image: none;\n    padding-right: 0.75rem;\n  }\n}"
  },
  "tabs": {
    "title": "Tab Interface Styling",
    "description": "Tab styling creates a clear visual distinction between tab navigation and content panels. This includes active states, hover effects, and proper spacing to create an intuitive tabbed interface that guides user interaction.",
    "code": "/* Tab container */\n.tabs-container {\n  width: 100%;\n  margin-bottom: 1rem;\n}\n\n/* Tab list */\n[role=\"tablist\"] {\n  display: flex;\n  border-bottom: 2px solid #e5e5e5;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  background: white;\n}\n\n/* Individual tabs */\n[role=\"tab\"] {\n  background: none;\n  border: none;\n  padding: 0.75rem 1.5rem;\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 500;\n  color: #666;\n  border-bottom: 3px solid transparent;\n  transition: all 0.2s ease;\n  white-space: nowrap;\n}\n\n/* Tab hover state */\n[role=\"tab\"]:hover {\n  color: #333;\n  background-color: #f8f9fa;\n}\n\n/* Active tab */\n[role=\"tab\"][aria-selected=\"true\"] {\n  color: #007acc;\n  border-bottom-color: #007acc;\n  background-color: white;\n}\n\n/* Tab focus state */\n[role=\"tab\"]:focus {\n  outline: 2px solid #007acc;\n  outline-offset: -2px;\n  z-index: 1;\n}\n\n/* Tab panels */\n[role=\"tabpanel\"] {\n  padding: 1.5rem;\n  background: white;\n  border: 1px solid #e5e5e5;\n  border-top: none;\n  min-height: 200px;\n}\n\n/* Hidden panels */\n[role=\"tabpanel\"][hidden] {\n  display: none;\n}\n\n/* Vertical tabs layout */\n.tabs-vertical {\n  display: flex;\n  align-items: flex-start;\n}\n\n.tabs-vertical [role=\"tablist\"] {\n  flex-direction: column;\n  border-bottom: none;\n  border-right: 2px solid #e5e5e5;\n  min-width: 200px;\n}\n\n.tabs-vertical [role=\"tab\"] {\n  width: 100%;\n  text-align: left;\n  border-bottom: none;\n  border-right: 3px solid transparent;\n}\n\n.tabs-vertical [role=\"tab\"][aria-selected=\"true\"] {\n  border-right-color: #007acc;\n  border-bottom-color: transparent;\n}\n\n.tabs-vertical [role=\"tabpanel\"] {\n  flex: 1;\n  border-left: none;\n  border-top: 1px solid #e5e5e5;\n}\n\n/* Compact tabs */\n.tabs-compact [role=\"tab\"] {\n  padding: 0.5rem 1rem;\n  font-size: 0.875rem;\n}\n\n.tabs-compact [role=\"tabpanel\"] {\n  padding: 1rem;\n}\n\n/* Pills style tabs */\n.tabs-pills [role=\"tablist\"] {\n  border-bottom: none;\n  gap: 0.25rem;\n  padding: 0.25rem;\n  background: #f8f9fa;\n  border-radius: 0.5rem;\n}\n\n.tabs-pills [role=\"tab\"] {\n  border-radius: 0.375rem;\n  border-bottom: none;\n}\n\n.tabs-pills [role=\"tab\"][aria-selected=\"true\"] {\n  background: white;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n  border-bottom-color: transparent;\n}\n\n.tabs-pills [role=\"tabpanel\"] {\n  border: none;\n  background: transparent;\n}\n\n/* Responsive tabs */\n@media (max-width: 768px) {\n  [role=\"tablist\"] {\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n  }\n  \n  [role=\"tab\"] {\n    flex-shrink: 0;\n    padding: 0.5rem 1rem;\n    font-size: 0.875rem;\n  }\n  \n  [role=\"tabpanel\"] {\n    padding: 1rem;\n  }\n  \n  .tabs-vertical {\n    flex-direction: column;\n  }\n  \n  .tabs-vertical [role=\"tablist\"] {\n    width: 100%;\n    flex-direction: row;\n    border-right: none;\n    border-bottom: 2px solid #e5e5e5;\n  }\n  \n  .tabs-vertical [role=\"tab\"] {\n    border-right: none;\n    border-bottom: 3px solid transparent;\n  }\n  \n  .tabs-vertical [role=\"tab\"][aria-selected=\"true\"] {\n    border-bottom-color: #007acc;\n    border-right-color: transparent;\n  }\n}"
  },
  "tooltip": {
    "title": "Tooltip Positioning and Styling",
    "description": "Tooltip styling focuses on readability and proper positioning. Tooltips should be visually distinct from the main content while remaining accessible and not interfering with user interaction. Animation and positioning are key considerations.",
    "code": "/* Base tooltip styles */\n.tooltip {\n  position: absolute;\n  z-index: 1000;\n  background: #333;\n  color: white;\n  padding: 0.5rem 0.75rem;\n  border-radius: 4px;\n  font-size: 0.875rem;\n  line-height: 1.4;\n  max-width: 200px;\n  word-wrap: break-word;\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity 0.2s, visibility 0.2s, transform 0.2s;\n  pointer-events: none;\n}\n\n/* Tooltip arrow */\n.tooltip::before {\n  content: '';\n  position: absolute;\n  width: 0;\n  height: 0;\n  border-style: solid;\n}\n\n/* Tooltip positioning variants */\n.tooltip-top {\n  bottom: 100%;\n  left: 50%;\n  transform: translateX(-50%) translateY(-8px);\n  margin-bottom: 8px;\n}\n\n.tooltip-top::before {\n  top: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  border-width: 6px 6px 0 6px;\n  border-color: #333 transparent transparent transparent;\n}\n\n.tooltip-bottom {\n  top: 100%;\n  left: 50%;\n  transform: translateX(-50%) translateY(8px);\n  margin-top: 8px;\n}\n\n.tooltip-bottom::before {\n  bottom: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  border-width: 0 6px 6px 6px;\n  border-color: transparent transparent #333 transparent;\n}\n\n.tooltip-left {\n  right: 100%;\n  top: 50%;\n  transform: translateY(-50%) translateX(-8px);\n  margin-right: 8px;\n}\n\n.tooltip-left::before {\n  left: 100%;\n  top: 50%;\n  transform: translateY(-50%);\n  border-width: 6px 0 6px 6px;\n  border-color: transparent transparent transparent #333;\n}\n\n.tooltip-right {\n  left: 100%;\n  top: 50%;\n  transform: translateY(-50%) translateX(8px);\n  margin-left: 8px;\n}\n\n.tooltip-right::before {\n  right: 100%;\n  top: 50%;\n  transform: translateY(-50%);\n  border-width: 6px 6px 6px 0;\n  border-color: transparent #333 transparent transparent;\n}\n\n/* Show tooltip */\n.tooltip-trigger:hover .tooltip,\n.tooltip-trigger:focus .tooltip,\n.tooltip.show {\n  opacity: 1;\n  visibility: visible;\n  transform: translateX(-50%) translateY(0); /* For top/bottom */\n}\n\n.tooltip-trigger:hover .tooltip-left,\n.tooltip-trigger:focus .tooltip-left,\n.tooltip-left.show {\n  transform: translateY(-50%) translateX(0);\n}\n\n.tooltip-trigger:hover .tooltip-right,\n.tooltip-trigger:focus .tooltip-right,\n.tooltip-right.show {\n  transform: translateY(-50%) translateX(0);\n}\n\n/* Tooltip container */\n.tooltip-trigger {\n  position: relative;\n  display: inline-block;\n}\n\n/* Tooltip variants */\n.tooltip-light {\n  background: white;\n  color: #333;\n  border: 1px solid #ddd;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.15);\n}\n\n.tooltip-light::before {\n  border-top-color: #ddd;\n}\n\n.tooltip-light::after {\n  content: '';\n  position: absolute;\n  top: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  border-width: 5px 5px 0 5px;\n  border-style: solid;\n  border-color: white transparent transparent transparent;\n}\n\n.tooltip-error {\n  background: #dc3545;\n}\n\n.tooltip-warning {\n  background: #ffc107;\n  color: #333;\n}\n\n.tooltip-success {\n  background: #28a745;\n}\n\n.tooltip-info {\n  background: #17a2b8;\n}\n\n/* Large tooltip */\n.tooltip-lg {\n  padding: 0.75rem 1rem;\n  font-size: 1rem;\n  max-width: 300px;\n}\n\n/* Small tooltip */\n.tooltip-sm {\n  padding: 0.25rem 0.5rem;\n  font-size: 0.75rem;\n  max-width: 150px;\n}\n\n/* Tooltip with rich content */\n.tooltip-rich {\n  text-align: left;\n  padding: 1rem;\n  max-width: 250px;\n}\n\n.tooltip-rich h4 {\n  margin: 0 0 0.5rem 0;\n  font-size: 0.9rem;\n}\n\n.tooltip-rich p {\n  margin: 0;\n  font-size: 0.8rem;\n  line-height: 1.3;\n}"
  },
  "dropdown": {
    "title": "Dropdown Menu Styling",
    "description": "Dropdown styling creates visually appealing and functional menus that appear on demand. This includes proper positioning, shadows, animations, and clear visual hierarchy for menu items with appropriate hover and focus states.",
    "code": "/* Dropdown container */\n.dropdown {\n  position: relative;\n  display: inline-block;\n}\n\n/* Dropdown trigger button */\n.dropdown button {\n  background: white;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  transition: all 0.2s;\n}\n\n.dropdown button:hover {\n  background: #f8f9fa;\n  border-color: #999;\n}\n\n.dropdown button:focus {\n  outline: 2px solid #007acc;\n  outline-offset: 2px;\n}\n\n.dropdown button[aria-expanded=\"true\"] {\n  background: #f8f9fa;\n  border-color: #007acc;\n}\n\n/* Dropdown arrow icon */\n.dropdown-arrow {\n  transition: transform 0.2s;\n}\n\n.dropdown button[aria-expanded=\"true\"] .dropdown-arrow {\n  transform: rotate(180deg);\n}\n\n/* Dropdown menu */\n.dropdown-menu {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  z-index: 1000;\n  min-width: 160px;\n  background: white;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  opacity: 0;\n  visibility: hidden;\n  transform: translateY(-10px);\n  transition: all 0.2s ease;\n  margin-top: 0.25rem;\n  padding: 0.5rem 0;\n}\n\n/* Show dropdown */\n.dropdown-menu:not([hidden]),\n.dropdown-menu.show {\n  opacity: 1;\n  visibility: visible;\n  transform: translateY(0);\n}\n\n/* Dropdown menu items */\n.dropdown-menu [role=\"menuitem\"] {\n  display: block;\n  width: 100%;\n  padding: 0.5rem 1rem;\n  border: none;\n  background: none;\n  text-align: left;\n  color: #333;\n  text-decoration: none;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  font-size: 0.875rem;\n}\n\n.dropdown-menu [role=\"menuitem\"]:hover,\n.dropdown-menu [role=\"menuitem\"]:focus {\n  background-color: #f8f9fa;\n  outline: none;\n}\n\n.dropdown-menu [role=\"menuitem\"]:active {\n  background-color: #e9ecef;\n}\n\n/* Dropdown separator */\n.dropdown-menu [role=\"separator\"] {\n  height: 1px;\n  background: #e9ecef;\n  margin: 0.5rem 0;\n  border: none;\n}\n\n/* Dropdown menu positioning variants */\n.dropdown-menu-right {\n  right: 0;\n  left: auto;\n}\n\n.dropdown-menu-up {\n  top: auto;\n  bottom: 100%;\n  margin-top: 0;\n  margin-bottom: 0.25rem;\n  transform: translateY(10px);\n}\n\n.dropdown-menu-up.show {\n  transform: translateY(0);\n}\n\n/* Dropdown sizes */\n.dropdown-sm button {\n  padding: 0.25rem 0.75rem;\n  font-size: 0.875rem;\n}\n\n.dropdown-sm .dropdown-menu {\n  min-width: 120px;\n}\n\n.dropdown-lg button {\n  padding: 0.75rem 1.25rem;\n  font-size: 1.125rem;\n}\n\n.dropdown-lg .dropdown-menu {\n  min-width: 200px;\n}\n\n/* Dropdown with icons */\n.dropdown-menu .menu-item-icon {\n  width: 1rem;\n  height: 1rem;\n  margin-right: 0.5rem;\n  display: inline-block;\n  vertical-align: middle;\n}\n\n/* Dangerous menu items */\n.dropdown-menu [role=\"menuitem\"].danger {\n  color: #dc3545;\n}\n\n.dropdown-menu [role=\"menuitem\"].danger:hover {\n  background-color: #f8d7da;\n}\n\n/* Disabled menu items */\n.dropdown-menu [role=\"menuitem\"]:disabled,\n.dropdown-menu [role=\"menuitem\"].disabled {\n  color: #999;\n  cursor: not-allowed;\n  background: none;\n}\n\n.dropdown-menu [role=\"menuitem\"]:disabled:hover,\n.dropdown-menu [role=\"menuitem\"].disabled:hover {\n  background: none;\n}\n\n/* Nested dropdown */\n.dropdown-submenu {\n  position: relative;\n}\n\n.dropdown-submenu .dropdown-menu {\n  top: 0;\n  left: 100%;\n  margin-top: 0;\n  margin-left: 0.25rem;\n}\n\n/* Mobile responsive */\n@media (max-width: 768px) {\n  .dropdown-menu {\n    position: fixed;\n    top: auto;\n    left: 1rem;\n    right: 1rem;\n    width: auto;\n    margin-top: 0.5rem;\n    transform: translateY(0);\n  }\n  \n  .dropdown-menu:not([hidden]) {\n    transform: translateY(0);\n  }\n}"
  },
  "checkbox": {
    "title": "Styling Custom Checkboxes",
    "description": "Custom checkboxes are styled by hiding the default input and using a pseudo-element (`::before`) on a new element (or the label) to create the checkmark. Transitions on `transform` and `background-color` create smooth animations.",
    "code": ".custom-checkbox {\n  appearance: none;\n  width: 1.25rem;\n  height: 1.25rem;\n  border: 2px solid #6b7280;\n  border-radius: 0.25rem;\n  cursor: pointer;\n  display: grid;\n  place-content: center;\n}\n\n.custom-checkbox::before {\n  content: \"\";\n  width: 0.75rem;\n  height: 0.75rem;\n  transform: scale(0);\n  transition: transform 150ms ease-in-out;\n  background-color: #4f46e5;\n  clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);\n}\n\n.custom-checkbox:checked {\n  background-color: #4f46e5;\n  border-color: #4f46e5;\n}\n\n.custom-checkbox:checked::before {\n  transform: scale(1);\n}"
  },
  "radio_group": {
    "title": "Styling Custom Radio Buttons",
    "description": "Similar to checkboxes, custom radio buttons are created by hiding the default input. The container element can be styled to show a selected state using the `:has(:checked)` pseudo-class, which provides a modern, CSS-only way to indicate the active selection.",
    "code": ".custom-radio-container:has(:checked) {\n  border-color: #4f46e5;\n  box-shadow: 0 0 0 1px #4f46e5;\n}\n\n.custom-radio {\n  appearance: none;\n  width: 1.25rem;\n  height: 1.25rem;\n  border: 2px solid #6b7280;\n  border-radius: 50%;\n  display: grid;\n  place-content: center;\n}\n\n.custom-radio::before {\n  content: \"\";\n  width: 0.75rem;\n  height: 0.75rem;\n  border-radius: 50%;\n  transform: scale(0);\n  transition: transform 150ms ease-in-out;\n  background-color: #4f46e5;\n}\n\n.custom-radio:checked {\n  border-color: #4f46e5;\n}\n\n.custom-radio:checked::before {\n  transform: scale(1);\n}"
  },
  "toggle_switch": {
    "title": "CSS for Toggle Switches",
    "description": "The switch is styled using the `background-color` property on the main button. The `aria-checked` attribute is used as a selector hook. The thumb is a `<span>` that is moved using a CSS `transform: translateX()`, creating a smooth sliding animation.",
    "code": ".toggle-switch {\n  position: relative;\n  display: inline-flex;\n  height: 1.75rem;\n  width: 3.25rem;\n  background-color: #d1d5db;\n  transition: background-color 200ms;\n}\n\n.toggle-switch[aria-checked=\"true\"] {\n  background-color: #4f46e5;\n}\n\n.toggle-thumb {\n  display: inline-block;\n  width: 1.25rem;\n  height: 1.25rem;\n  background-color: white;\n  border-radius: 9999px;\n  transform: translateX(0.25rem);\n  transition: transform 200ms;\n}\n\n.toggle-switch[aria-checked=\"true\"] .toggle-thumb {\n  transform: translateX(1.75rem);\n}"
  },
  "range_slider": {
    "title": "Styling Range Sliders",
    "description": "Styling range inputs is complex due to browser differences. You must use vendor-prefixed pseudo-elements like `::-webkit-slider-runnable-track` and `::-moz-range-track` for the track, and `::-webkit-slider-thumb` and `::-moz-range-thumb` for the handle.",
    "code": "input[type=range] {\n  -webkit-appearance: none;\n  appearance: none;\n  width: 100%;\n  background: transparent;\n}\n\n/* Track */\ninput[type=range]::-webkit-slider-runnable-track {\n  height: 0.5rem;\n  background: #d1d5db;\n  border-radius: 9999px;\n}\n\n/* Thumb */\ninput[type=range]::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  appearance: none;\n  margin-top: -0.25rem; /* Center thumb on track */\n  height: 1rem;\n  width: 1rem;\n  background: #4f46e5;\n  border-radius: 50%;\n  cursor: pointer;\n}"
  },
  "file_upload": {
    "title": "Styling the Drop Zone",
    "description": "The drop zone is typically a `<label>` styled with a dashed border to indicate its function. A special class, often added with JavaScript, is used to change the appearance (e.g., border color) when a file is being dragged over the element, providing crucial visual feedback.",
    "code": "#drop-zone {\n  border: 2px dashed #d1d5db;\n  border-radius: 0.5rem;\n  padding: 2rem;\n  text-align: center;\n  color: #6b7280;\n  transition: border-color 200ms, background-color 200ms;\n}\n\n#drop-zone.drag-over {\n  border-color: #4f46e5;\n  background-color: #eef2ff;\n}\n\n#preview-container .preview-item {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  padding: 0.5rem;\n  border: 1px solid #e5e7eb;\n  border-radius: 0.25rem;\n  margin-top: 0.5rem;\n}\n\n#preview-container img {\n  width: 50px;\n  height: 50px;\n  object-fit: cover;\n  border-radius: 0.25rem;\n}"
  },
  "date_picker": {
    "title": "Styling Native Pickers",
    "description": "Directly styling the calendar UI of a native date picker is not possible. Instead, styling focuses on the input field itself. You can also style the icon that browsers add using the `::-webkit-calendar-picker-indicator` pseudo-element, allowing for some customization.",
    "code": "input[type=\"date\"]::-webkit-calendar-picker-indicator {\n  background: url('data:image/svg+xml,...') no-repeat;\n  /* Custom SVG icon can be used */\n  cursor: pointer;\n  opacity: 0.6;\n  transition: opacity 200ms;\n}\n\ninput[type=\"date\"]::-webkit-calendar-picker-indicator:hover {\n  opacity: 1;\n}"
  },
  "search_input": {
    "title": "Styling the Autocomplete List",
    "description": "The suggestions list is a `<ul>` positioned absolutely below the input. It's styled with a background, shadow, and border to make it appear as a dropdown. Individual list items (`<li>`) have hover and focus states to indicate which item is active.",
    "code": ".search-container {\n  position: relative;\n}\n\n#suggestions-list {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  right: 0;\n  background: white;\n  border: 1px solid #d1d5db;\n  border-top: none;\n  border-radius: 0 0 0.5rem 0.5rem;\n  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);\n  z-index: 10;\n  max-height: 200px;\n  overflow-y: auto;\n}\n\n#suggestions-list li {\n  padding: 0.75rem 1rem;\n  cursor: pointer;\n}\n\n#suggestions-list li:hover, #suggestions-list li.active {\n  background-color: #eef2ff; /* indigo-100 */\n}"
  },
  "multi_select_dropdown": {
    "title": "Styling a Custom Dropdown",
    "description": "Styling involves creating a custom button and panel. The panel is positioned absolutely and its visibility is toggled. Inside, checkboxes are styled for a clean look. The display area uses 'pills' (small, rounded containers) for each selected item, providing a clear visual summary.",
    "code": ".multi-select-container {\n  position: relative;\n}\n\n#multi-select-panel {\n  position: absolute; \n  /* ... positioning styles */\n  background: white;\n  border: 1px solid #d1d5db;\n  border-radius: 0.5rem;\n  /* ... other styles */\n}\n\n.selected-item-pill {\n  display: inline-flex;\n  align-items: center;\n  gap: 0.5rem;\n  background-color: #eef2ff;\n  color: #4338ca;\n  padding: 0.25rem 0.75rem;\n  border-radius: 9999px;\n  font-size: 0.875rem;\n  font-weight: 500;\n}"
  },
  "card": {
    "title": "Styling Content Cards",
    "description": "Styling a card component typically involves defining its container properties like `background-color`, `border-radius`, and `box-shadow` to make it stand out from the page. Padding is essential to give the content inside breathing room. Different sections of the card (image, body, footer) can be styled separately for a clear hierarchy.",
    "code": ".card {\n  background-color: white;\n  border-radius: 0.75rem; /* 12px */\n  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);\n  overflow: hidden; /* Ensures child elements respect the border-radius */\n  transition: transform 0.2s, box-shadow 0.2s;\n}\n\n.card:hover {\n  transform: translateY(-4px);\n  box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);\n}\n\n.card-image {\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n}\n\n.card-body {\n  padding: 1.5rem; /* 24px */\n}\n\n.card-title {\n  font-size: 1.25rem; /* 20px */\n  font-weight: 600;\n  margin-bottom: 0.5rem;\n}\n\n.card-text {\n  color: #4b5563; /* text-gray-600 */\n  line-height: 1.6;\n}\n\n.card-footer {\n  padding: 1rem 1.5rem;\n  background-color: #f9fafb; /* bg-gray-50 */\n  border-top: 1px solid #e5e7eb; /* border-gray-200 */\n}"
  },
  "badge": {
    "title": "Styling Badges and Pills",
    "description": "Styling badges focuses on creating small, visually distinct labels. Key properties are `padding` for size, `border-radius` for shape (pills are fully rounded), `font-size`, `font-weight`, and `background-color` to differentiate them. A set of color-coded classes is a common pattern.",
    "code": ".badge {\n  display: inline-flex;\n  align-items: center;\n  padding: 0.25em 0.6em;\n  font-size: 0.875em;\n  font-weight: 500;\n  line-height: 1;\n  border-radius: 0.375rem; /* 6px */\n}\n\n.badge-dot {\n  width: 0.5rem;\n  height: 0.5rem;\n  border-radius: 9999px;\n  margin-right: 0.5rem;\n}\n\n.badge-pill {\n  border-radius: 9999px;\n}\n\n/* Color Variants */\n.badge-blue {\n  background-color: #dbeafe; /* blue-100 */\n  color: #2563eb; /* blue-700 */\n}\n\n.badge-blue .badge-dot {\n  background-color: #2563eb; /* blue-700 */\n}\n\n.badge-green {\n  background-color: #d1fae5; /* green-100 */\n  color: #059669; /* green-700 */\n}\n\n.badge-green .badge-dot {\n  background-color: #059669; /* green-700 */\n}"
  },
  "avatar": {
    "title": "Styling Avatars",
    "description": "Avatar styling centers on shape and size. `border-radius` is used to create circular or rounded-square shapes. `width` and `height` should be equal to maintain aspect ratio. An `object-fit: cover` property ensures the image fills the space without distortion. Online status indicators are often added using pseudo-elements or an extra `<span>`.",
    "code": ".avatar {\n  display: inline-block;\n  position: relative;\n  vertical-align: middle;\n}\n\n.avatar-img {\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n/* Shapes */\n.avatar-circle .avatar-img {\n  border-radius: 9999px;\n}\n\n.avatar-rounded .avatar-img {\n  border-radius: 0.375rem; /* 6px */\n}\n\n/* Sizes */\n.avatar-sm { width: 2rem; height: 2rem; }\n.avatar-md { width: 3rem; height: 3rem; }\n.avatar-lg { width: 4rem; height: 4rem; }\n\n/* Status Indicator */\n.avatar-status {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: 0.75rem;\n  height: 0.75rem;\n  border-radius: 9999px;\n  border: 2px solid white;\n}\n\n.avatar-lg .avatar-status {\n  width: 1rem;\n  height: 1rem;\n}\n\n.status-online { background-color: #22c55e; /* green-500 */ }\n.status-offline { background-color: #6b7280; /* gray-500 */ }"
  },
  "progress_bar": {
    "title": "Styling Progress Bars",
    "description": "Progress bars are styled with a container and a fill element. The container has a background color and overflow hidden. The fill element's width is set (often via an inline style from JS) to represent the progress percentage. For indeterminate loaders, a CSS animation on the background is used to create a continuous motion effect.",
    "code": ".progress-container {\n  width: 100%;\n  height: 0.75rem; /* 12px */\n  background-color: #e5e7eb; /* gray-200 */\n  border-radius: 9999px;\n  overflow: hidden;\n}\n\n.progress-fill {\n  height: 100%;\n  background-color: #4f46e5; /* indigo-600 */\n  border-radius: 9999px;\n  transition: width 0.3s ease-in-out;\n}\n\n/* Indeterminate (Loading) State */\n.progress-indeterminate .progress-fill {\n  width: 100%;\n  background-image: linear-gradient(\n    45deg, \n    rgba(255, 255, 255, .15) 25%, \n    transparent 25%, \n    transparent 50%, \n    rgba(255, 255, 255, .15) 50%, \n    rgba(255, 255, 255, .15) 75%, \n    transparent 75%, \n    transparent\n  );\n  background-size: 1rem 1rem;\n  animation: progress-bar-stripes 1s linear infinite;\n}\n\n@keyframes progress-bar-stripes {\n  from { background-position: 1rem 0; }\n  to { background-position: 0 0; }\n}"
  },
  "stat_block": {
    "title": "Styling Stat Blocks",
    "description": "Stat blocks are styled to create a clear visual hierarchy between the metric (the number) and its label. The metric is typically large and bold, while the label is smaller and has less emphasis. An optional icon can be used for added visual context.",
    "code": ".stat-block {\n  background-color: white;\n  padding: 1.5rem; /* 24px */\n  border-radius: 0.75rem; /* 12px */\n  box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);\n  text-align: center;\n}\n\n.stat-label {\n  font-size: 0.875rem; /* 14px */\n  font-weight: 500;\n  color: #6b7280; /* text-gray-500 */\n  margin-bottom: 0.25rem;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.stat-metric {\n  font-size: 2.25rem; /* 36px */\n  font-weight: 700;\n  color: #111827; /* text-gray-900 */\n  line-height: 1.1;\n}\n\n.stat-change {\n  margin-top: 0.5rem;\n  font-size: 0.875rem; /* 14px */\n  font-weight: 500;\n}\n\n.stat-change-positive {\n  color: #16a34a; /* green-600 */\n}\n\n.stat-change-negative {\n  color: #dc2626; /* red-600 */\n}"
  },
  "timeline": {
    "title": "Styling Timelines",
    "description": "A timeline is typically built from an ordered or unordered list. The core styling involves creating a vertical line using a pseudo-element (`::before`) on the list container. Each list item (`<li>`) is then positioned relative to this line, with a dot or icon to mark the event point.",
    "code": ".timeline {\n  position: relative;\n  padding-left: 2.5rem; /* Space for the line and dots */\n  list-style: none; /* Remove default list bullets */\n}\n\n/* The vertical line */\n.timeline::before {\n  content: '';\n  position: absolute;\n  left: 0.7rem; /* Position in the middle of the padding */\n  top: 0;\n  bottom: 0;\n  width: 2px;\n  background-color: #e5e7eb; /* gray-200 */\n}\n\n.timeline-item {\n  position: relative;\n  margin-bottom: 2rem;\n}\n\n/* The dot on the line */\n.timeline-item::before {\n  content: '';\n  position: absolute;\n  left: -2rem; /* Position over the vertical line */\n  top: 0.25rem;\n  width: 1rem;\n  height: 1rem;\n  border-radius: 9999px;\n  background-color: white;\n  border: 3px solid #4f46e5; /* indigo-600 */\n}\n\n.timeline-time {\n  display: block;\n  font-size: 0.875rem;\n  color: #6b7280; /* gray-500 */\n  margin-bottom: 0.25rem;\n}\n\n.timeline-title {\n  font-weight: 600;\n  color: #111827; /* gray-900 */\n}"
  },
  "toast": {
    "title": "Styling Toast Notifications",
    "description": "Toasts are styled to be noticeable but not intrusive. They're given a `position: fixed` to stay in one corner of the viewport. `box-shadow` and `border-radius` make them look clean. CSS transitions on `opacity` and `transform` are used for smooth entrance and exit animations, controlled by JavaScript.",
    "code": ".toast-container {\n  position: fixed;\n  bottom: 1.5rem;\n  right: 1.5rem;\n  z-index: 9999;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.toast {\n  display: flex;\n  align-items: center;\n  padding: 1rem;\n  background-color: white;\n  border-radius: 0.5rem;\n  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);\n  border-left: 4px solid;\n  min-width: 300px;\n  opacity: 0;\n  transform: translateX(100%);\n  transition: opacity 0.3s, transform 0.3s;\n}\n\n.toast.show {\n  opacity: 1;\n  transform: translateX(0);\n}\n\n/* Color Variants */\n.toast-success { border-color: #22c55e; /* green-500 */ }\n.toast-error { border-color: #ef4444; /* red-500 */ }\n.toast-info { border-color: #3b82f6; /* blue-500 */ }"
  },
  "breadcrumbs": {
    "title": "Styling Breadcrumbs",
    "description": "Breadcrumbs are styled as a horizontal list. The key styling element is the separator, which is typically added using the `::before` pseudo-element on each list item (except the first). ARIA attributes are used to provide semantic context.",
    "code": ".breadcrumb-nav ol {\n  display: flex;\n  align-items: center;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  flex-wrap: wrap;\n}\n\n.breadcrumb-item {\n  display: flex;\n  align-items: center;\n}\n\n/* Separator */\n.breadcrumb-item + .breadcrumb-item::before {\n  content: '/';\n  margin: 0 0.75rem; /* 12px */\n  color: #9ca3af; /* gray-400 */\n  pointer-events: none;\n}\n\n.breadcrumb-link {\n  font-size: 0.875rem; /* 14px */\n  font-weight: 500;\n  color: #6b7280; /* gray-500 */\n  text-decoration: none;\n  transition: color 0.2s;\n}\n\n.breadcrumb-link:hover {\n  color: #111827; /* gray-900 */\n}\n\n.breadcrumb-current {\n  font-size: 0.875rem; /* 14px */\n  font-weight: 500;\n  color: #111827; /* gray-900 */\n}"
  },
  "sidebar": {
    "title": "Styling Sidebar Navigation",
    "description": "Sidebars are styled to occupy the full height of their container. A `transition` on the `transform` property is used for smooth open/close animations. When closed, it's moved off-screen with `transform: translateX(-100%)`. An overlay is often used to dim the main content when the sidebar is open on smaller screens.",
    "code": "/* Sidebar container */\n.sidebar {\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 280px;\n  background-color: #1f2937; /* gray-800 */\n  color: #d1d5db; /* gray-300 */\n  z-index: 1000;\n  transform: translateX(-100%);\n  transition: transform 0.3s ease-in-out;\n}\n\n.sidebar.open {\n  transform: translateX(0);\n}\n\n/* Overlay for mobile */\n.sidebar-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 999;\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity 0.3s, visibility 0.3s;\n}\n\n.sidebar-overlay.open {\n  opacity: 1;\n  visibility: visible;\n}\n\n/* Navigation links */\n.sidebar-nav-link {\n  display: flex;\n  align-items: center;\n  padding: 0.75rem 1.5rem;\n  border-radius: 0.375rem;\n  transition: background-color 0.2s;\n}\n\n.sidebar-nav-link:hover {\n  background-color: #374151; /* gray-700 */\n  color: white;\n}\n\n.sidebar-nav-link.active {\n  background-color: #4f46e5; /* indigo-600 */\n  color: white;\n}"
  },
  "pagination": {
    "title": "Styling Pagination",
    "description": "Pagination is styled as a list of links or buttons. Key styles distinguish the current page, disabled links (first/last page), and hover states. Using flexbox makes it easy to align the items and create consistent spacing.",
    "code": ".pagination-nav {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem; /* 8px */\n}\n\n.pagination-item {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 2.5rem; /* 40px */\n  height: 2.5rem; /* 40px */\n  border-radius: 0.375rem; /* 6px */\n  border: 1px solid #d1d5db; /* gray-300 */\n  font-size: 0.875rem; /* 14px */\n  font-weight: 500;\n  color: #374151; /* gray-700 */\n  background-color: white;\n  text-decoration: none;\n  transition: background-color 0.2s, color 0.2s, border-color 0.2s;\n}\n\n.pagination-item:not(.disabled):hover {\n  background-color: #f3f4f6; /* gray-100 */\n}\n\n.pagination-item.current {\n  background-color: #4f46e5; /* indigo-600 */\n  border-color: #4f46e5;\n  color: white;\n  z-index: 1;\n}\n\n.pagination-item.disabled {\n  color: #9ca3af; /* gray-400 */\n  background-color: #f9fafb; /* gray-50 */\n  pointer-events: none;\n}\n\n.pagination-ellipsis {\n  /* Styles for the '...' item */\n}"
  },
  "stepper": {
    "title": "Styling Steppers",
    "description": "A stepper is styled with a line connecting the steps, and indicators for completed, active, and upcoming steps. Pseudo-elements (`::before` and `::after`) are heavily used to create the connector lines and style the step markers without extra HTML.",
    "code": ".stepper {\n  display: flex;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.step {\n  flex: 1;\n  position: relative;\n  text-align: center;\n}\n\n/* Connector line */\n.step:not(:last-child)::after {\n  content: '';\n  position: absolute;\n  top: 1.25rem; /* Center vertically with marker */\n  left: 50%;\n  width: 100%;\n  height: 2px;\n  background-color: #e5e7eb; /* gray-200 */\n  z-index: -1;\n}\n\n.step-marker {\n  width: 2.5rem;\n  height: 2.5rem;\n  border-radius: 9999px;\n  border: 2px solid #e5e7eb; /* gray-200 */\n  background-color: white;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 500;\n  transition: background-color 0.2s, border-color 0.2s;\n}\n\n.step-label {\n  margin-top: 0.5rem;\n  font-size: 0.875rem;\n  color: #6b7280; /* gray-500 */\n}\n\n/* Active State */\n.step.active .step-marker {\n  border-color: #4f46e5; /* indigo-600 */\n  background-color: #4f46e5;\n  color: white;\n}\n\n/* Completed State */\n.step.completed .step-marker {\n  border-color: #4f46e5;\n  background-color: #4f46e5;\n  color: white;\n}\n.step.completed:after {\n  background-color: #4f46e5;\n}"
  }
}